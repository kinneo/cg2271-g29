#include <MKL25Z4.h>
#define MASK(x) (1 << (x))

// Define LEDs
#define GREEN_PTC4 4
#define GREEN_PTC5 5
#define GREEN_PTC6 6
#define GREEN_PTC10 10
#define GREEN_PTC11 11
#define GREEN_PTC12 12
#define GREEN_PTC13 13
#define GREEN_PTC16 16
#define RED_PTC7 7Â // for now put 7 fix later


const uint32_t GREEN_LEDS[] = {
  MASK(GREEN_PTC4), MASK(GREEN_PTC5), MASK(GREEN_PTC6), MASK(GREEN_PTC10), MASK(GREEN_PTC11), MASK(GREEN_PTC12), MASK(GREEN_PTC13), MASK(GREEN_PTC16)
};

// Configure as GPIO, Set as output
void InitLED(void) {
  // Enable Clock to PORTC
  SIM->SCGC5 |= SIM_SCGC5_PORTC_MASK;

  PORTC->PCR[GREEN_PTC4] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC5] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC6] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC10] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC11] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC12] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC13] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;
  PORTC->PCR[GREEN_PTC16] = PORT_PCR_MUX(1)|PORT_PCR_PE_MASK|PORT_PCR_PS_MASK;

  PORTC->PCR[7] = PORT_PCR_MUX(1);

  PTC->PDDR |= (MASK(GREEN_PTC4) | MASK(GREEN_PTC5) | MASK(GREEN_PTC6) | MASK(GREEN_PTC10) | MASK(GREEN_PTC11) | MASK(GREEN_PTC12) | MASK(GREEN_PTC13) | MASK(GREEN_PTC16) | MASK(7));
}

// Turn off LEDs
void GreenOff(void) {
  PTC->PCOR = (MASK(GREEN_PTC4) | MASK(GREEN_PTC5) | MASK(GREEN_PTC6) | MASK(GREEN_PTC10) | MASK(GREEN_PTC11) | MASK(GREEN_PTC12) | MASK(GREEN_PTC13) | MASK(GREEN_PTC16));
}

void RedOff(void) {
  PTC->PCOR = MASK(7);
}
